# Generated by Django 5.1.6 on 2025-02-27 14:34

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TestExchangeAPI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("api_key", models.CharField(max_length=100)),
                ("api_secret", models.CharField(max_length=100)),
                ("base_url", models.URLField()),
                ("is_active", models.BooleanField(default=True)),
                ("requests_per_minute", models.IntegerField(default=60)),
                ("requests_per_hour", models.IntegerField(default=1200)),
                ("timeout", models.IntegerField(default=30)),
                ("use_test_net", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_used", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_type",
                    models.CharField(
                        choices=[
                            ("LIMIT", "Limit Order"),
                            ("MARKET", "Market Order"),
                            ("STOP_LOSS", "Stop Loss"),
                            ("STOP_LIMIT", "Stop Limit"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=4
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("OPEN", "Open"),
                            ("PARTIALLY_FILLED", "Partially Filled"),
                            ("FILLED", "Filled"),
                            ("CANCELLED", "Cancelled"),
                            ("REJECTED", "Rejected"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(decimal_places=8, max_digits=18, null=True),
                ),
                (
                    "stop_price",
                    models.DecimalField(decimal_places=8, max_digits=18, null=True),
                ),
                ("quantity", models.DecimalField(decimal_places=8, max_digits=18)),
                (
                    "filled_quantity",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=18
                    ),
                ),
                (
                    "remaining_quantity",
                    models.DecimalField(decimal_places=8, max_digits=18),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField(null=True)),
                (
                    "average_fill_price",
                    models.DecimalField(decimal_places=8, max_digits=18, null=True),
                ),
                (
                    "total_filled_amount",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=18
                    ),
                ),
                (
                    "fees",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=18
                    ),
                ),
                ("client_order_id", models.CharField(max_length=50, null=True)),
                ("api_key_id", models.CharField(max_length=50, null=True)),
                ("ip_address", models.GenericIPAddressField(null=True)),
                ("user_agent", models.TextField(null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TestTrade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("exchange_trade_id", models.CharField(max_length=100)),
                ("price", models.DecimalField(decimal_places=8, max_digits=18)),
                ("quantity", models.DecimalField(decimal_places=8, max_digits=18)),
                ("timestamp", models.DateTimeField()),
                ("is_simulated", models.BooleanField(default=False)),
                ("simulation_delay", models.IntegerField(null=True)),
                ("raw_response", models.JSONField(null=True)),
                (
                    "exchange_api",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading.testexchangeapi",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="trading.order"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TradingPair",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("base_asset", models.CharField(max_length=10)),
                ("quote_asset", models.CharField(max_length=10)),
                (
                    "min_trade_size",
                    models.DecimalField(decimal_places=8, max_digits=18),
                ),
                ("price_precision", models.IntegerField(default=8)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "last_price",
                    models.DecimalField(decimal_places=8, max_digits=18, null=True),
                ),
            ],
            options={
                "unique_together": {("base_asset", "quote_asset")},
            },
        ),
        migrations.AddField(
            model_name="order",
            name="trading_pair",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="trading.tradingpair"
            ),
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=8, max_digits=18)),
                ("quantity", models.DecimalField(decimal_places=8, max_digits=18)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("maker_fee", models.DecimalField(decimal_places=8, max_digits=18)),
                ("taker_fee", models.DecimalField(decimal_places=8, max_digits=18)),
                (
                    "maker_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maker_trades",
                        to="trading.order",
                    ),
                ),
                (
                    "taker_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="taker_trades",
                        to="trading.order",
                    ),
                ),
                (
                    "trading_pair",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading.tradingpair",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["trading_pair", "timestamp"],
                        name="trading_tra_trading_c27a52_idx",
                    ),
                    models.Index(
                        fields=["maker_order", "timestamp"],
                        name="trading_tra_maker_o_ab76b6_idx",
                    ),
                    models.Index(
                        fields=["taker_order", "timestamp"],
                        name="trading_tra_taker_o_05d984_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="OrderBook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=4
                    ),
                ),
                ("price", models.DecimalField(decimal_places=8, max_digits=18)),
                ("quantity", models.DecimalField(decimal_places=8, max_digits=18)),
                ("order_count", models.IntegerField(default=1)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "trading_pair",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trading.tradingpair",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["trading_pair", "side", "price"],
                        name="trading_ord_trading_80bb37_idx",
                    )
                ],
                "unique_together": {("trading_pair", "side", "price")},
            },
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["trading_pair", "status", "side"],
                name="trading_ord_trading_7d3211_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["user", "created_at"], name="trading_ord_user_id_1601d7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["status", "expires_at"], name="trading_ord_status_944068_idx"
            ),
        ),
    ]
